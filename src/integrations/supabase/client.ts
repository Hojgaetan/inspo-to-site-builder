// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = "https://yavxlxrttdcqbknhxiph.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlhdnhseHJ0dGRjcWJrbmh4aXBoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM4NzcxMzQsImV4cCI6MjA2OTQ1MzEzNH0.UhWBAi2Gt-ktERqMWqEEOyZUQHnLW3Zy749YIFZBAog";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});
// Handle refresh token errors by clearing invalid tokens
supabase.auth.onAuthStateChange((event, session) => {
  if (event === 'TOKEN_REFRESHED' && !session) {
    // Clear invalid tokens from localStorage
    const keys = Object.keys(localStorage);
    keys.forEach(key => {
      if (key.startsWith('sb-')) {
        localStorage.removeItem(key);
      }
    });
  }
});

// Clear invalid tokens on initialization if refresh fails
const clearInvalidTokens = () => {
  const keys = Object.keys(localStorage);
  keys.forEach(key => {
    if (key.startsWith('sb-')) {
      localStorage.removeItem(key);
    }
  });
};

// Listen for auth errors and clear tokens if needed
window.addEventListener('unhandledrejection', (event) => {
  if (event.reason?.message?.includes('Invalid Refresh Token') || 
      event.reason?.message?.includes('refresh_token_not_found')) {
    clearInvalidTokens();
    // Optionally reload the page to restart auth flow
    window.location.reload();
  }
});